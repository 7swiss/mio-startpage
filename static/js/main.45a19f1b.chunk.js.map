{"version":3,"sources":["Header/component.tsx","Search/component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","Date","toLocaleString","React","useState","today","setDate","useEffect","timer","setInterval","clearInterval","day","toLocaleDateString","weekday","date","getDate","month","time","toLocaleTimeString","hour","hour12","minute","className","Search","search","setSearch","value","onChange","event","target","onKeyDown","e","key","window","location","href","type","placeholder","aria-label","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAqCeA,G,OAjCJ,IAAIC,MAAOC,iBAEG,WAAO,IAAD,EACJC,IAAMC,SAAS,IAAIH,MADf,mBACtBI,EADsB,KACfC,EADe,KAG7BH,IAAMI,WAAU,WACZ,IAAMC,EAAQC,aAAY,WAE1BH,EAAQ,IAAIL,QACX,KACH,OAAO,WACLS,cAAcF,MAEf,IAEH,IAAMG,EAAMN,EAAMO,mBAAmB,KAAM,CAAEC,QAAS,SAChDC,EAAI,UAAMH,EAAN,aAAcN,EAAMU,UAApB,YAAiCV,EAAMO,mBAAmB,KAAM,CAAEI,MAAO,SAAzE,QACJC,EAAOZ,EAAMa,mBAAmB,KAAM,CAAEC,KAAM,UAAWC,QAAQ,EAAMC,OAAQ,YAErF,OACA,yBAASC,UAAU,aAAnB,SACI,sBAAKA,UAAU,wCAAf,UACE,qBAAKA,UAAU,eAAf,SACE,oBAAIA,UAAU,iBAAd,8BAEF,sBAAKA,UAAU,yBAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBL,IACtB,gCAAO,iCAASH,gBCFXS,G,MAzBU,WAAO,IAAD,EACDpB,IAAMC,SAAS,IADd,mBACtBoB,EADsB,KACdC,EADc,KAa7B,OACE,0BAASH,UAAU,gCAAnB,UACI,sBAAMA,UAAU,cAAhB,oBACA,uBAAOA,UAAU,sCAAsCI,MAAOF,EAAQG,SAdvD,SAACC,GACpBH,EAAUG,EAAMC,OAAOH,QAa2EI,UAX9E,SAACC,GACP,UAAVA,EAAEC,MACJC,OAAOC,SAASC,KAAO,+CAAiDX,GAE5D,UAAVO,EAAEC,MACJC,OAAOC,SAASC,KAAO,iCAAmCX,IAMgEY,KAAK,OAAOC,YAAY,GAAGC,aAAW,qBAC9J,sBAAKhB,UAAU,kCAAf,UACA,mBAAGa,KAAM,+CAAiDX,EAAQF,UAAU,uCAAuCc,KAAK,SAAxH,2BACA,mBAAGD,KAAM,6BAA+BX,EAAQF,UAAU,uCAAuCc,KAAK,SAAtG,+BACA,mBAAGD,KAAM,8BAAgCX,EAAQF,UAAU,kCAAkCc,KAAK,SAAlG,mCCTOG,MATf,WACE,OACE,sBAAKjB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISkB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.45a19f1b.chunk.js","sourcesContent":["import React from 'react';\n\nimport './style.scss';\n\nlet time = new Date().toLocaleString();\n\nconst Header: React.FC = () => {\n  const [today, setDate] = React.useState(new Date()); // Save the current date to be able to trigger an update\n\n  React.useEffect(() => {\n      const timer = setInterval(() => { // Creates an interval which will update the current data every minute\n      // This will trigger a rerender every component that uses the useDate hook.\n      setDate(new Date());\n    }, 10 * 1000); // 60 *\n    return () => {\n      clearInterval(timer); // Return a funtion to clear the timer so that it will stop being called on unmount\n    }\n  }, []);\n\n  const day = today.toLocaleDateString('en', { weekday: 'long' });\n  const date = `${day}, ${today.getDate()} ${today.toLocaleDateString('en', { month: 'long' })}\\n\\n`\n  const time = today.toLocaleTimeString('en', { hour: 'numeric', hour12: true, minute: 'numeric' });\n\n  return (\n  <section className=\"app-header\">\n      <div className=\"header-main d-flex pb-6 border-bottom\">\n        <div className=\"header-label\">\n          <h1 className=\"text-left mb-1\">Benvenuto, sir</h1>\n        </div>\n        <div className=\"header-time text-right\">\n          <h1 className=\"mb-1\">{time}</h1>\n          <small><strong>{date}</strong></small>\n        </div>\n      </div>\n  </section>\n)};\n\nexport default Header;\n","import React from 'react';\n\nimport './style.scss';\n\nconst Search: React.FC = () => {\n  const [search, setSearch] = React.useState('');\n  const handleChange = (event: any) => {\n    setSearch(event.target.value);\n  };\n  const handleKeyDown = (e: any) => {\n    if (e.key === 'Enter') {\n      window.location.href = 'https://www.google.com/search?safe=strict&q=' + search;\n    }\n    if (e.key === 'Shift') {\n      window.location.href = 'https://www.duckduckgo.com/?q=' + search;\n    }\n  };\n  return (\n    <section className=\"app-search pb-6 border-bottom\">\n        <span className=\"search-icon\">ï†—</span>\n        <input className=\"form-control input-block input-dark\" value={search} onChange={handleChange} onKeyDown={handleKeyDown} type=\"text\" placeholder=\"\" aria-label=\"Full-width input\" />\n        <div className=\"d-flex flex-justify-center mt-6\">\n        <a href={'https://www.google.com/search?safe=strict&q=' + search} className=\"btn btn-outline mr-2 box-shadow-none\" type=\"button\">Google Search</a>\n        <a href={'https://duckduckgo.com/?q=' + search} className=\"btn btn-outline mr-2 box-shadow-none\" type=\"button\">DuckDuckGo Search</a>\n        <a href={'https://www.amazon.com/s?k=' + search} className=\"btn btn-outline box-shadow-none\" type=\"button\">Amazon Search</a>\n        </div>\n    </section>\n  )};\n\nexport default Search;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport { Header } from './Header';\nimport { Search } from './Search';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Search/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}